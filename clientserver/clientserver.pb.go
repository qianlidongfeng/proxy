// Code generated by protoc-gen-go. DO NOT EDIT.
// source: clientserver.proto

package clientserver

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProxyInfo struct {
	Proxy                string   `protobuf:"bytes,1,opt,name=proxy,proto3" json:"proxy,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProxyInfo) Reset()         { *m = ProxyInfo{} }
func (m *ProxyInfo) String() string { return proto.CompactTextString(m) }
func (*ProxyInfo) ProtoMessage()    {}
func (*ProxyInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ff7daac9203daa, []int{0}
}

func (m *ProxyInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProxyInfo.Unmarshal(m, b)
}
func (m *ProxyInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProxyInfo.Marshal(b, m, deterministic)
}
func (m *ProxyInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProxyInfo.Merge(m, src)
}
func (m *ProxyInfo) XXX_Size() int {
	return xxx_messageInfo_ProxyInfo.Size(m)
}
func (m *ProxyInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ProxyInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ProxyInfo proto.InternalMessageInfo

func (m *ProxyInfo) GetProxy() string {
	if m != nil {
		return m.Proxy
	}
	return ""
}

func (m *ProxyInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ProxyInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Respone struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Status               int32    `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Respone) Reset()         { *m = Respone{} }
func (m *Respone) String() string { return proto.CompactTextString(m) }
func (*Respone) ProtoMessage()    {}
func (*Respone) Descriptor() ([]byte, []int) {
	return fileDescriptor_83ff7daac9203daa, []int{1}
}

func (m *Respone) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Respone.Unmarshal(m, b)
}
func (m *Respone) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Respone.Marshal(b, m, deterministic)
}
func (m *Respone) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Respone.Merge(m, src)
}
func (m *Respone) XXX_Size() int {
	return xxx_messageInfo_Respone.Size(m)
}
func (m *Respone) XXX_DiscardUnknown() {
	xxx_messageInfo_Respone.DiscardUnknown(m)
}

var xxx_messageInfo_Respone proto.InternalMessageInfo

func (m *Respone) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Respone) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto.RegisterType((*ProxyInfo)(nil), "clientserver.ProxyInfo")
	proto.RegisterType((*Respone)(nil), "clientserver.Respone")
}

func init() { proto.RegisterFile("clientserver.proto", fileDescriptor_83ff7daac9203daa) }

var fileDescriptor_83ff7daac9203daa = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4a, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0x29, 0x4e, 0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x41, 0x16, 0x53, 0x72, 0xe7, 0xe2, 0x0c, 0x28, 0xca, 0xaf, 0xa8, 0xf4, 0xcc, 0x4b, 0xcb, 0x17,
	0x12, 0xe1, 0x62, 0x2d, 0x00, 0x71, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20, 0x1c, 0x21,
	0x21, 0x2e, 0x96, 0x92, 0xca, 0x82, 0x54, 0x09, 0x26, 0xb0, 0x20, 0x98, 0x2d, 0x24, 0xc0, 0xc5,
	0x5c, 0x5a, 0x94, 0x23, 0xc1, 0x0c, 0x16, 0x02, 0x31, 0x95, 0xac, 0xb9, 0xd8, 0x83, 0x52, 0x8b,
	0x0b, 0xf2, 0xf3, 0x52, 0x85, 0x24, 0xb8, 0xd8, 0x93, 0xf3, 0xf3, 0x4a, 0x52, 0xf3, 0x4a, 0xc0,
	0x06, 0xf1, 0x04, 0xc1, 0xb8, 0x42, 0x62, 0x5c, 0x6c, 0xc5, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x60,
	0xc3, 0x58, 0x83, 0xa0, 0x3c, 0x23, 0x7b, 0x2e, 0x16, 0x8f, 0x92, 0x92, 0x02, 0x21, 0x73, 0x2e,
	0x66, 0xf7, 0xd4, 0x12, 0x21, 0x71, 0x3d, 0x14, 0x77, 0xc3, 0x1d, 0x28, 0x25, 0x8a, 0x2a, 0x01,
	0xb5, 0x50, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x37, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d,
	0x39, 0xf0, 0x58, 0xf1, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// HttpClient is the client API for Http service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HttpClient interface {
	// Sends a greeting
	Get(ctx context.Context, in *ProxyInfo, opts ...grpc.CallOption) (*Respone, error)
}

type httpClient struct {
	cc *grpc.ClientConn
}

func NewHttpClient(cc *grpc.ClientConn) HttpClient {
	return &httpClient{cc}
}

func (c *httpClient) Get(ctx context.Context, in *ProxyInfo, opts ...grpc.CallOption) (*Respone, error) {
	out := new(Respone)
	err := c.cc.Invoke(ctx, "/clientserver.Http/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HttpServer is the server API for Http service.
type HttpServer interface {
	// Sends a greeting
	Get(context.Context, *ProxyInfo) (*Respone, error)
}

// UnimplementedHttpServer can be embedded to have forward compatible implementations.
type UnimplementedHttpServer struct {
}

func (*UnimplementedHttpServer) Get(ctx context.Context, req *ProxyInfo) (*Respone, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}

func RegisterHttpServer(s *grpc.Server, srv HttpServer) {
	s.RegisterService(&_Http_serviceDesc, srv)
}

func _Http_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProxyInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HttpServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clientserver.Http/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HttpServer).Get(ctx, req.(*ProxyInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _Http_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clientserver.Http",
	HandlerType: (*HttpServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Http_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "clientserver.proto",
}
